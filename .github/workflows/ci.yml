name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  CI: true
jobs:
  Test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Use Nightly Rust
      run: |
        rustup install nightly
        rustup default nightly
    - name: Run Tests
      run: cargo test
  Miri:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Use Nightly Rust
      run: |
        rustup install nightly
        rustup default nightly
    - name: Run Test With Miri
      run: cargo miri test
  Clippy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Clippy
      run: cargo clippy --all-targets
  Docs:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Check docs
      run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps
  Rustfmt:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - name: Check formatting
      run: cargo fmt --all -- --check
